name: Test and Release

# Run the workflow when a Pull Request is opened or when changes are pushed to main
on:
  pull_request:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run the steps below with the following versions of Node.js
        node-version: [10.x, 12.x]
    steps:
      # Fetch the latest commit
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js using the appropriate version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true

      # Run tests
      - name: Test
        run: pnpm test

  release:
    # Only release on push to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # Waits for test jobs for each Node.js version to complete
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true

      - name: Build
        run: pnpm build

      - name: Release
        run: pnpx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
